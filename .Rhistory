casenumbers=as_data_frame(distinct(select(case,name,person_id,case_number)))
infotb$dob=as.Date(infotb$dob)
#check if use of logical operator "or" is correct
#linear spacing for x axis
vis=ggplot(eventstb, aes(colour=event)) +
geom_segment(aes(x=(subset(eventstb,event="prison"|"jail")$incustody),
xend=(subset(eventstb,event="prison"|"jail")$outcustody),
y=event, yend=event),size=3)+
geom_point(aes(x=(subset(eventstb,event="charge")$incustody),y=event))+
labs(title=person,x="time")+
scale_x_date(date_breaks="1 year", date_labels="%b %Y")
vis
distinct(select(case,person_id, case_number,charge, charge_degree, statute, screening_date, offense_date))
}
case_vis(person,dfnew)
case_vis<-function(person,dfnew){
case=filter(dfnew, name==person)
jailtb=as_data_frame(distinct(select(case,jail_in_custody,jail_out_custody)))
jailtb=rename(jailtb, incustody=jail_in_custody, outcustody=jail_out_custody)
jailtb=mutate(jailtb, event="jail")
prisontb=as_data_frame(distinct(select(case,prison_in_custody,prison_out_custody)))
prisontb=rename(prisontb, incustody=prison_in_custody, outcustody=prison_out_custody)
prisontb=mutate(prisontb,event="prison")
chargetb=as_data_frame(distinct(select(case,offense_date)))
chargetb=rename(chargetb, incustody=offense_date)
chargetb=mutate(chargetb,outcustody=incustody,event="charge")
#Note: these are not unique charges, these are the unique DAYS cases occured
#On an events visualization, even if somebody had 20 charges on 1 day, it will still
#only appear as 1 point so there's no point in doing anything else.
eventstb=bind_rows(jailtb, prisontb,chargetb)
eventstb$incustody=as.Date(eventstb$incustody)
eventstb$outcustody=as.Date(eventstb$outcustody)
infotb=as_data_frame(distinct(select(case,name,person_id,sex,race,dob,age,marital_status,type_of_assessment,raw_score,decile_score)))
casenumbers=as_data_frame(distinct(select(case,name,person_id,case_number)))
infotb$dob=as.Date(infotb$dob)
#check if use of logical operator "or" is correct
#linear spacing for x axis
vis=ggplot(eventstb, aes(colour=event)) +
geom_segment(aes(x=(subset(eventstb,event="prison"|"jail")$incustody),
xend=(subset(eventstb,event="prison"|"jail")$outcustody),
y=event, yend=event),size=3)+
geom_point(aes(x=(subset(eventstb,event="charge")$incustody),y=event))+
labs(title=person,x="time")+
scale_x_date(date_breaks="1 year", date_labels="%b %Y")
print(vis)
distinct(select(case,person_id, case_number,charge, charge_degree, statute, screening_date, offense_date))
}
# person="miguel hernandez"
# person="bilal williams"
# person="edward riddle"
person="aajah herrington"
# case_df=filter(dfnew, name==person)
case_vis(person,dfnew)
# distinct(select(case,person_id, case_number,charge, charge_degree, statute, screening_date, offense_date))
case_vis<-function(person,dfnew){
case=dfnew%>%
filter(name==person)%>%
as_data_frame()
jailtb=case%>%
distinct(jail_in_custody,jail_out_custody)%>%
rename(incustody=jail_in_custody, outcustody=jail_out_custody)%>%
mutate(event="jail")
prisontb=case%>%
distinct(prison_in_custody,prison_out_custody)%>%
rename(incustody=prison_in_custody, outcustody=prison_out_custody)%>%
mutate(event="prison")
chargetb=case%>%
distinct(offense_date)%>%
rename(incustody=offense_date)%>%
mutate(outcustody=incustody,
event="charge")
#Note: these are not unique charges, these are the unique DAYS cases occured
#On an events visualization, even if somebody had 20 charges on 1 day, it will still
#only appear as 1 point so there's no point in doing anything else.
eventstb=bind_rows(jailtb, prisontb,chargetb)
eventstb$incustody=as.Date(eventstb$incustody)
eventstb$outcustody=as.Date(eventstb$outcustody)
# infotb=distinct(case,name,person_id,sex,race,dob,age,
#                 marital_status,type_of_assessment,raw_score,decile_score)
# casenumbers=distinct(select(case,name,person_id,case_number))
#
# infotb$dob=as.Date(infotb$dob)
vis=ggplot(eventstb, aes(colour=event)) +
geom_segment(aes(x=(subset(eventstb,event="prison"|"jail")$incustody),
xend=(subset(eventstb,event="prison"|"jail")$outcustody),
y=event, yend=event),size=3)+
geom_point(aes(x=(subset(eventstb,event="charge")$incustody),y=event))+
labs(title=person,x="time")+
scale_x_date(date_breaks="1 year", date_labels="%b %Y")
print(vis)
distinct(select(case,person_id, case_number,charge, charge_degree, statute, screening_date,
offense_date))
}
# person="miguel hernandez"
# person="bilal williams"
# person="edward riddle"
person="aajah herrington"
# case_df=filter(dfnew, name==person)
case_vis(person,dfnew)
# distinct(select(case,person_id, case_number,charge, charge_degree, statute, screening_date, offense_date))
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/b-data-query")
# Load packages
library(tidyverse)
library(magrittr)
library(stringr)
library(xml2)
library(XML)
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/b-data-query")
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/b-data-query")
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/b-data-query")
library(stringr)
library(tidyverse)
#includes core: ggplot2,dplyr,tidyr,readr,purrr,tibble
library(magrittr)
library(lubridate)
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/crim-recid-code")
# Connect to the database
db <- src_sqlite("compas-analysis/compas.db", create = TRUE)
# List all the tables
table_names <- src_tbls(db)
table_names
casearrest_df <- tbl(db,"casearrest")
charge_df <- tbl(db,"charge")
compas_df <- tbl(db,"compas")
jailhistory_df <-tbl(db,"jailhistory")
prisonhistory_df <-tbl(db,"prisonhistory")
people_df<-tbl(db,"people")
fail_to_appear<-read.csv("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/Data tables/fail_to_appear.csv")
convictions<-read.csv("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/Data tables/convicted_from_disps.csv")
compas_scores<-read.csv("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/Data tables/compas_scores.csv")
dfnew=select(compas_df,id,person_id, first, last, marital_status, screening_date,scale_id, type_of_assessment, raw_score, decile_score)
dfnew=rename(dfnew, person_score_id=id)
#Joining dfnew to relevant columns in people_df
peoplenew=select(people_df,id, name,sex, race, dob, age, c_case_number)
peoplenew=rename(peoplenew,person_id=id)
dfnew=left_join(dfnew, peoplenew, by="person_id")
#Joining dfnew to relevant columns in casearrest_df--COMMENTED OUT FOR NOW
#casearrestnew=select(casearrest_df,person_id, case_number, arrest_id, arrest_date, #charge_degree)
#dfnew=left_join(dfnew, casearrestnew, by="person_id")
# Joined dfnew to relevant columns in jailhistory_df
jailhistorynew=select(jailhistory_df,person_id, in_custody, out_custody)
jailhistorynew=rename(jailhistorynew,jail_in_custody=in_custody, jail_out_custody=out_custody)
dfnew=left_join(dfnew, jailhistorynew, by="person_id")
#Joined dfnew to relevant columns in charge_df
chargenew=select(charge_df,person_id, case_type, case_number, offense_date, charge_number, charge_degree, charge, date_charge_filed, filing_type, filing_agency, statute)
dfnew=left_join(dfnew, chargenew, by="person_id")
#Joined dfnew to relevant columns in prisonhistory_df
prisonhistorynew=select(prisonhistory_df,person_id, in_custody, out_custody)
prisonhistorynew=rename(prisonhistorynew,prison_in_custody=in_custody, prison_out_custody=out_custody)
dfnew=left_join(dfnew, prisonhistorynew, by="person_id")
#Does NOT include the offense they're brought in on
df_screendate=dfnew%>%
mutate(COMPAS_and_before=if_else(offense_date<=screening_date,1,0))%>%
filter(COMPAS_and_before==1)%>%
as_data_frame()%>%
mutate(offense_date=ymd_hms(offense_date),
screening_date=ymd_hms(screening_date)
)%>%
group_by(person_id,screening_date)%>%
mutate(COMPAS_offense_date=max(offense_date))%>%
#this only gives me the last compas offense
ungroup()%>%
mutate(gap=as.numeric(screening_date-COMPAS_offense_date,units="days"),
#chose to use base ifelse fcn instead of if_else fcn because
#this one doesn't require that the T/F options be same data type
COMPAS_offense_date=as.character(COMPAS_offense_date),
COMPAS_offense_date=ifelse(gap>30,NA,COMPAS_offense_date),
COMPAS_offense_date=ymd(COMPAS_offense_date),
#hand checked these upper 3 lines, this works
beforeCOMPAS=if_else(offense_date<COMPAS_offense_date,1,0)
)
df_screendate = subset( df_screendate, select = -COMPAS_and_before  )
#Does NOT include the offense they're brought in on
df_beforeCOMPAS=df_screendate%>%filter(beforeCOMPAS==1)
df_beforeCOMPAS = subset( df_beforeCOMPAS, select = -beforeCOMPAS  )
# max(select(df_screendate,gap))
# boxplot(select(df_screendate,gap))
# fivenum(df_screendate$gap)
# kurt=filter(df_screendate,person_id==7294) #somebody xwith 2 screening dates
#
# weird_gap=filter(df_screendate, gap>30) #514104 rows/1952325rows from df_screendate
# #3 lines retyping compas offense date works as expected, end up with 514104 NAs
# large_gap_ids=unique(weird_gap$person_id)
#
# brandon=filter(df_screendate, person_id==193)
df_afterCOMPAS=dfnew%>%
as_data_frame()%>%
mutate(offense_date=ymd_hms(offense_date),
screening_date=ymd_hms(screening_date)
)%>%
group_by(person_id)%>%
mutate(first_screening=min(screening_date))%>%
ungroup()%>%
filter(offense_date>first_screening)
mar=as_data_frame(distinct(select(df_beforeCOMPAS, marital_status)))
sex=as_data_frame(distinct(select(df_beforeCOMPAS, sex)))
race=as_data_frame(distinct(select(df_beforeCOMPAS, race)))
charge_deg=as_data_frame(distinct(select(df_beforeCOMPAS, charge_degree)))
charge=as_data_frame(distinct(select(df_beforeCOMPAS, charge)))
statute=df_beforeCOMPAS%>%
select(statute)%>%
mutate(truncated=substr(statute,1,3),
is_violent=if_else(substr(statute,1,3) %in% c("777","782","784","806","812","825","827"),1,0)
)
#sort(distinct(statute$truncated))
#distinct(filter(statute,truncated=="OCS"))
filter(df_beforeCOMPAS,statute=="ODRD631")
#ODVD463
df_beforeCOMPAS%>%filter(statute=="OHDD58")%>%
select(first,last,case_number)%>%
View()
#use levels(dataset$column) to check what the vectors are
features=distinct(df_beforeCOMPAS, person_id, first,last,age,sex,marital_status,race)
features$sex=factor(features$sex, levels=c("Male", "Female"), labels=c(1,2))
features$sex=as.numeric(as.character(features$sex))
features$marital_status=factor(features$marital_status, levels=c("Single", "Married", "Separated","Significant Other","Widowed","Divorced","Unknown"), labels=c(1,2,3,4,5,6,7))
features$marital_status=as.numeric(as.character(features$marital_status))
features$race=factor(features$race, levels=c("Caucasian", "African-American","Hispanic","Asian","Native American","Other"), labels=c(1,2,3,4,5,6))
features$race=as.numeric(as.character(features$race))
propub_violence_scores<-compas_scores%>%
select(person_id, type_of_assessment,raw_score,decile_score)%>%
filter(type_of_assessment=="Risk of Violence")
propub_recidivism_scores<-compas_scores%>%
select(person_id, type_of_assessment,raw_score,decile_score)%>%
filter(type_of_assessment=="Risk of Recidivism")
propub_failure_scores<-compas_scores%>%
select(person_id, type_of_assessment,raw_score,decile_score)%>%
filter(type_of_assessment=="Risk of Failure to Appear")
features<-features%>%
left_join(propub_violence_scores,by="person_id")%>%
rename(p_violence_score=type_of_assessment,
p_violence_raw=raw_score,violence_decile=decile_score)%>%
left_join(propub_recidivism_scores,by="person_id")%>%
rename(p_recid_score=type_of_assessment,
p_recid_raw=raw_score,recid_decile=decile_score)%>%
left_join(propub_failure_scores,by="person_id")%>%
rename(p_fail_to_appear_score=type_of_assessment,
p_fail_to_appear_raw=raw_score,fail_to_appear_decile=decile_score)
rm(propub_failure_scores,propub_recidivism_scores,propub_violence_scores)
dynamic_fel=df_beforeCOMPAS%>%
distinct(person_id,charge_degree,case_number,charge,screening_date,date_charge_filed) %>%
mutate(screening_date=ymd_hms(screening_date),
date_charge_filed=ymd_hms(date_charge_filed),
is_felony = if_else(substr(charge_degree,2,2)=="F",1,0),
years_bw = (as.numeric(screening_date-date_charge_filed,units="days")/365.25),
fel_less_5yr = if_else(years_bw<=5&is_felony==1,1,0)
)%>%
#128639 rows
distinct(person_id,charge_degree,case_number,charge,is_felony,fel_less_5yr)%>%
#120141 rows--why?
group_by(person_id) %>%
summarize(felony_count_person=sum(is_felony),
yrs5_felcount_person = sum(fel_less_5yr))
# View(head(dynamic_fel, 100))
dynamic_incarceration=df_beforeCOMPAS %>%
distinct(person_id,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody,case_number)%>%
as_data_frame()%>%
mutate(prison_in_custody=ymd_hms(prison_in_custody),
prison_out_custody=ymd_hms(prison_out_custody),
jail_in_custody=ymd_hms(jail_in_custody),
jail_out_custody=ymd_hms(jail_out_custody),
prison_time=abs(as.numeric
(prison_out_custody-prison_in_custody,units="days")),
jail_time=abs(as.numeric
(jail_out_custody-jail_in_custody,units="days"))
)%>%
group_by(person_id) %>%
summarize(prison_visits=n_distinct(prison_in_custody),
prison_time=sum(unique(prison_time)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(unique(jail_time)),
numcases=n_distinct(case_number)
)
# View(head(dynamic_incarceration, 100))
#
# test_case_incarc=as_data_frame(filter(df_beforeCOMPAS, person_id==55))
#
#
# person_with_most=filter(dynamic_fel,felony_count_person==max(dynamic_fel$felony_count_person))
# #52 felonies
# testperson=as_data_frame(filter(df_beforeCOMPAS, person_id==9761))
# unique(testperson$case_number)
# #involved in 40 distinct cases
dynamic_drug=df_beforeCOMPAS%>%
distinct(person_id,charge_degree,case_number,charge,screening_date,date_charge_filed,statute)%>%
as_data_frame()%>%
mutate(screening_date=ymd_hms(screening_date),
date_charge_filed=ymd_hms(date_charge_filed),
years_bw = (as.numeric(screening_date-date_charge_filed,units="days")/365.25),
is_drug= if_else(substr(statute,1,3)=="893",1,0),
is_drug_5yrs=if_else(years_bw<=5&is_drug==1,1,0)
)%>%
distinct(person_id,charge_degree,case_number,charge,is_drug,is_drug_5yrs) %>%
group_by(person_id) %>%
summarize(drug_count_person = sum(is_drug),
drug_count_5yrs=sum(is_drug_5yrs)
)
# View(head(dynamic_drug,100))
dynamic_misdem=df_beforeCOMPAS%>%
distinct(person_id,charge_degree,case_number,charge,screening_date,date_charge_filed)%>%
as_data_frame()%>%
mutate(screening_date=ymd_hms(screening_date),
date_charge_filed=ymd_hms(date_charge_filed),
years_bw = (as.numeric(screening_date-date_charge_filed,units="days")/365.25),
is_misdem= if_else(substr(charge_degree,2,2)=="M",1,0),
is_misdem_5yrs=if_else(years_bw<=5&is_misdem,1,0))%>%
distinct(person_id,charge_degree,case_number,charge,is_misdem,is_misdem_5yrs) %>%
group_by(person_id) %>%
summarize(misdem_count_person = sum(is_misdem),
misdem_count_5yrs=sum(is_misdem_5yrs)
)
# View(head(dynamic_misdem,100))
arnold1<-df_beforeCOMPAS%>%
distinct(person_id,screening_date,offense_date,dob,statute,prison_in_custody,prison_out_custody)%>%
as_data_frame()%>%
mutate(screening_date=ymd_hms(screening_date),
#converting everything to lubridate date class
offense_date=ymd_hms(offense_date),
dob=ymd_hms(dob),
prison_in_custody=ymd_hms(prison_in_custody),
prison_out_custody=ymd_hms(prison_out_custody),
current_age=(screening_date-dob)/365.25,
twenty_or_less=if_else(current_age<=20,1,0),
is_violent=if_else(substr(statute,1,3) %in% c("777","782","784","794","806","812","825","827"),1,0),
current_violent_offense=if_else(is_violent==1,1,0),
current_violent_twenty=if_else(is_violent==1&twenty_or_less==1,1,0),
days_from_compas=as.numeric(screening_date-offense_date,units="days"),
is_current=if_else(days_from_compas<30,1,0),
prison_time=as.period(prison_out_custody-prison_in_custody,units="days"),
in_prison=case_when(is.null(prison_in_custody) ~ NA,
prison_out_custody-prison_in_custody>0 ~ TRUE,
prison_out_custody-prison_in_custody<0 ~ FALSE)
)%>%
group_by(person_id) %>%
summarize(current_age=max(current_age),
current_violent_offense=if_else(sum(current_violent_offense)>0,1,0),
current_violent_twenty=if_else(sum(current_violent_twenty)>0,1,0),
prior_incarceration=if_else(sum(in_prison)>0,1,0)
)
# View(head(arnold1,20))
convictions_subset<-convictions%>%
select(case_number,Charge,convicted)%>%
rename(charge_number=Charge)
arnold2<-df_beforeCOMPAS%>%
distinct(person_id,case_number,charge_number,charge_degree,charge,statute)%>%
as_data_frame()%>%
right_join(convictions_subset, by=c("case_number","charge_number"))%>%
#right_join b/c I want to be sure that I have all rows of convictions subset
#insufficient to left_join by case_number and charge_number because some cases and charges have more than one disposition
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0),
is_misdem= if_else(substr(charge_degree,2,2)=="M",1,0),
is_violent=if_else(substr(statute,1,3) %in% c("777","782","784","794","806","812","825","827"),1,0),
prior_conviction_F=if_else(is_felony==1&convicted==1,1,0),
prior_conviction_M=if_else(is_misdem==1&convicted==1,1,0),
violent_conviction=if_else(is_violent==1&convicted==1,1,0))%>%
group_by(person_id)%>%
summarise(
prior_conviction_F=if_else(sum(prior_conviction_F)>0,1,0),
prior_conviction_M=if_else(sum(prior_conviction_M)>0,1,0),
violent_conviction=if_else(sum(is_violent)>0,1,0)
)
# View(head(arnold2,100))
distinct_fail_to_appear<-fail_to_appear%>%
distinct(EventDate,case_num,fail_appeared)%>%
rename(case_number=case_num)
distinct_fail_to_appear$case_number=as.character(distinct_fail_to_appear$case_number)
arnold3<-df_beforeCOMPAS%>%
distinct(person_id,case_number,screening_date)%>%
left_join(distinct_fail_to_appear,by="case_number")%>%
mutate(EventDate=mdy(EventDate,tz="UTC"), #format = "%m/%d/%Y"
#mdy() fcn automatically converts to Date object, ymd_hms() function converts to POSIXt object, so
#specify tz="UTC" to get mdy() to convert to POSIXt object
days_bw=as.numeric(screening_date-EventDate,units="days"),
logical=days_bw<=730,
fail_appear_two_yr=if_else(logical&fail_appeared==1,1,0),
fail_appear_two_plus=if_else(!logical&fail_appeared==1,1,0)
)%>%
select(person_id,case_number,fail_appear_two_yr,fail_appear_two_plus)%>%
group_by(person_id)%>%
summarise(fail_appear_two_yr=sum(fail_appear_two_yr),
fail_appear_two_plus=sum(fail_appear_two_plus)
)
rm(distinct_fail_to_appear)
# View(head(arnold3,10))
recid<-df_afterCOMPAS%>%
distinct(person_id,case_number,charge_number,charge_degree,charge,statute,jail_in_custody,jail_out_custody,screening_date,offense_date)%>%
filter(!is.na(jail_in_custody))%>%
as_data_frame()%>%
mutate(screening_date=ymd_hms(screening_date),
jail_in_custody=ymd_hms(jail_in_custody),
jail_out_custody=ymd_hms(jail_out_custody),
offense_date=ymd_hms(offense_date),
is_felony = if_else(substr(charge_degree,2,2)=="F",1,0),
is_misdem= if_else(substr(charge_degree,2,2)=="M",1,0),
is_violent=if_else(substr(statute,1,3) %in% c("777","782","784","794","806","812","825","827"),1,0),
is_traffic = if_else(charge_degree=="(TCX)",1,0),
is_municipal= if_else((!substr(statute,1,1)%in%c(0:9))&!is.na(statute),1,0),
# jailtime_in_days=as.numeric(jail_out_custody-jail_in_custody,units="days"),
days_bw_jailin_scrndate=as.numeric(jail_in_custody-screening_date,units="days"),
recid_jail=if_else((days_bw_jailin_scrndate>30)&!is.na(jail_in_custody)&!is.na(screening_date),1,0),
days_bw=as.numeric(offense_date-screening_date,units="days"),
within_two_years=if_else(days_bw<720,1,0),
propub_recid=if_else((recid_jail==1&within_two_years==1
&is_traffic==0&is_municipal==0),1,0),
propub_violent_recid=if_else(propub_recid==1&is_violent==1,1,0)
)%>%
group_by(person_id)%>%
summarise(propub_recid=if_else(sum(propub_recid)>0,1,0),
propub_violent_recid=if_else(sum(propub_violent_recid)>0,1,0),
traffic_recid=if_else(sum(is_traffic)>0,1,0)
)
# View(head(recid,100))
features<-features%>%
left_join(dynamic_fel,by=NULL)%>%
left_join(dynamic_incarceration,by=NULL)%>%
left_join(dynamic_misdem,by=NULL)%>%
left_join(dynamic_misdem,by=NULL)%>%
left_join(arnold1,by=NULL)%>%
left_join(arnold2,by=NULL)%>%
left_join(arnold3,by=NULL)%>%
left_join(recid, by=NULL)%>%
rename(p_sex=sex,p_race=race,p_age=age,p_marital_status=marital_status,
p_felony_count_person=felony_count_person,p_yrs5_felcount_person=yrs5_felcount_person,
p_prison_visits=prison_visits,p_prison_time=prison_time,
p_jail_visits=jail_visits,p_jail_time=jail_time,p_numcases=numcases,
p_misdem_count_person=misdem_count_person,p_misdem_count_5yrs=misdem_count_5yrs,
p_current_age=current_age,
p_current_violent_offense=current_violent_offense,
p_current_violent_twenty=current_violent_twenty,
p_prior_incarceration=prior_incarceration,cq_prior_conviction_f=prior_conviction_F,
cq_prior_conviction_M=prior_conviction_M,cq_violent_conviction=violent_conviction,
cq_fail_appear_two_yr=fail_appear_two_yr, cq_fail_appear_two_plus=fail_appear_two_plus)
View(head(features))
write.csv(features,"features.csv")
View(features)
compas_df <- tbl(db,"compas")
View(compas_df)
unique(select(compas_df, scale_set))
distinct(select(compas_df, scale_set))
#check if use of logical operator "or" is correct
#linear spacing for x axis
case_vis<-function(person,dfnew){
case=dfnew%>%
filter(name==person)%>%
as_data_frame()
jailtb=case%>%
distinct(jail_in_custody,jail_out_custody)%>%
rename(incustody=jail_in_custody, outcustody=jail_out_custody)%>%
mutate(event="jail")
prisontb=case%>%
distinct(prison_in_custody,prison_out_custody)%>%
rename(incustody=prison_in_custody, outcustody=prison_out_custody)%>%
mutate(event="prison")
chargetb=case%>%
distinct(offense_date)%>%
rename(incustody=offense_date)%>%
mutate(outcustody=incustody,
event="charge")
#Note: these are not unique charges, these are the unique DAYS cases occured
#On an events visualization, even if somebody had 20 charges on 1 day, it will still
#only appear as 1 point so there's no point in doing anything else.
eventstb=bind_rows(jailtb, prisontb,chargetb)
eventstb$incustody=as.Date(eventstb$incustody)
eventstb$outcustody=as.Date(eventstb$outcustody)
vis=ggplot(eventstb, aes(colour=event)) +
geom_segment(aes(x=(subset(eventstb,event="prison"|"jail")$incustody),
xend=(subset(eventstb,event="prison"|"jail")$outcustody),
y=event, yend=event),size=3)+
geom_point(aes(x=(subset(eventstb,event="charge")$incustody),y=event))+
labs(title=person,x="time")+
scale_x_date(date_breaks="1 year", date_labels="%b %Y")
print(vis)
distinct(select(case,person_id, case_number,charge, charge_degree, statute, screening_date,
offense_date))
}
# person="miguel hernandez"
# person="bilal williams"
# person="edward riddle"
person="aajah herrington"
case_vis(person,dfnew)
pretrialscreen_2013_2014<-read.csv("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/Data tables/Compas_Jan2013_Dec2014_LegalRequest_PRETRIAL AND PRESCREEN.csv")
pretrialscreen_2014_2017<-read.csv("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/Data tables/Compas_Jan2014_Dec2017_LegalRequest_PRETRIAL AND PRESCREEN.csv")
pretrialscreen<-bind_rows(pretrialscreen_2013_2014,pretrialscreen_2014_2017)
# pretrialscreen$Screening_Date<-as.Date(pretrialscreen$Screening_Date,format="%m/%d/%Y %T")
#the above doesn't work for some reason
rm(pretrialscreen_2013_2014,pretrialscreen_2014_2017)
scattertbl1<-filter(pretrialscreen,DisplayText=="Risk of Violence")
scattertbl2<-filter(pretrialscreen,DisplayText=="Risk of Recidivism")
scattertbl3<-filter(pretrialscreen,DisplayText=="Risk of Failure to Appear")
features<-read.csv("features.csv")
ggplot(pretrialscreen, aes(x=RawScore, y=DecileScore)) +
geom_point(shape=1)  +
ggtitle("Pretrial Prescreen Dataset")
boxplot(RawScore~DisplayText,data=pretrialscreen, main="Distribution of Raw Scores for Each Screening Type", xlab="DisplayText", ylab="RawScore")
print("mean,25th quartile, median, 75th quartile,min,max")
print("Risk of Violence min max raw scores:")
fivenum(scattertbl1$RawScore)
ggplot(scattertbl1, aes(x=RawScore, y=DecileScore)) +
geom_point(shape=1)  +
ggtitle("Risk of Violence Scores")
print("Risk of Recidivism min max raw scores:")
fivenum(scattertbl2$RawScore)
ggplot(scattertbl2, aes(x=RawScore, y=DecileScore)) +
geom_point(shape=1)  +
ggtitle("Risk of Recidivism Scores")
print("Risk of Failure to Appear min max raw scores:")
fivenum(scattertbl1$RawScore)
ggplot(scattertbl3, aes(x=RawScore, y=DecileScore)) +
geom_point(shape=1)  +
ggtitle("Risk of Failure to Appear Scores")
View(pretrialscreen_2013_2014)
View(head(pretrialscreen))
